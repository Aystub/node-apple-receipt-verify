{
  "name": "node-apple-receipt-verify",
  "description": "A Node.js module for In-App-Purchase receipt validation for iOS",
  "version": "1.0.12",
  "homepage": "https://github.com/ladeiko/node-apple-receipt-verify",
  "repository": {
    "type": "git",
    "url": "git@github.com:ladeiko/node-apple-receipt-verify.git"
  },
  "author": {
    "name": "Siarhei Ladzeika",
    "email": "sergey.ladeiko@gmail.com"
  },
  "main": "./index.js",
  "dependencies": {
    "async": "^2.0.1",
    "clone": "^1.0.2",
    "lodash": "^4.14.2",
    "request": "^2.74.0",
    "shelljs": "^0.7.3",
    "tempfile": "^1.1.1"
  },
  "scripts": {
    "preinstall": "mkdir -p bin && cd src && make clean && make && rm -rf *.o && mv checkreceipt ../bin"
  },
  "engines": {
    "node": ">= 0.9.0"
  },
  "keywords": [
    "purchase",
    "receipt",
    "apple",
    "inapp",
    "ios receipt",
    "inapppurchase",
    "in-app-purchase",
    "apple receipt"
  ],
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/ladeiko/node-apple-receipt-verify/issues"
  },
  "maintainers": [
    {
      "name": "Siarhei Ladzeika",
      "email": "sergey.ladeiko@gmail.com"
    }
  ],
  "directories": {},
  "os": [
    "darwin",
    "linux"
  ],
  "devDependencies": {
    "standard": "^7.1.2",
    "surge": "^0.18.0"
  },
  "readme": "# node-apple-receipt-verify\r\n\r\n\u00A9 Siarhei Ladzeika < <sergey.ladeiko@gmail.com> >\r\n\r\nA Node.js module for In-App-Purchase receipt validation for iOS.\r\n\r\n### Changes\r\n\r\n#### v.1.0.12\r\n* Added 'originalTransactionId' to purchase description. \r\n\r\n### Debug Logging\r\n\r\nThe module can optionally turn on verbose debug log.\r\n\r\nIn order to enable the verbose logging, give the following to `.config()`:\r\n\r\n```javascript\r\nvar appleReceiptVerify = require('node-apple-receipt-verify');\r\nappleReceiptVerify.config({\r\n  verbose: true\r\n});\r\n```\r\n\r\n### Methods\r\n\r\n#### .config(options [object])\r\n\r\nInitializes module. Can be called more than once to reconfigure module.\r\n\r\n**options**: supports following keys:\r\n- `secret` [string] - Apple shared secret (See it in iTunes Connect: Go to My Apps > (select your app) > In-App Purchases > View or generate a shared secret) [optional]\r\n- `verbose` [boolean] - verbose logging switch, `false` by default. [optional]\r\n- `environment` [array of strings] - defines environments used for receipt validation on Apple servers. Supported environments: 'sandbox', 'production'. The sequence is important. Defaults to `['production']`. [optional]\r\n- `ignoreExpired` - if `true`, then expired purchases are skipped. Defaults to `true`. [optional]  \r\n\r\nNOTE: Shared password is required for iTunes subscription purchases.\r\n\r\n#### .validate(options [object], callback [function (err, purchasedProducts [array of objects ])])\r\n\r\nValidates an in-app-purchase receipt.\r\n\r\n**options**: supports keys:\r\n- `receipt` [string] - base64 encoded receipt. [required]\r\n- `device` - iOS vendor identifier. Example `438498A7-4850-41DB-BCBE-4E1756378E39`. If specified, then module will check if receipt belongs to vendor identifier. [optional]\r\n- `ignoreExpired` - if `true`, then expired purchases are skipped. Overrides global `ignoreExpired` specified in `.config()`. [optional]\r\n\r\n**callback**:  receives error or list of purchased products embedded in receipt\r\n\r\nThe purchased products list has structure:\r\n\r\n```\r\n[\r\n{\r\n    bundleId: <string>,\r\n    transactionId: <string>,\r\n    productId: <string>,\r\n    purchaseDate: <number>,\r\n    quantity: <number>,\r\n    *expirationDate: <number>\r\n},\r\n...\r\n]\r\n```\r\n\r\n### How To Use It\r\n\r\nExample:\r\n\r\n```javascript\r\nvar appleReceiptVerify = require('node-apple-receipt-verify');\r\nappleReceiptVerify.config({\r\n    secret: \"1234567890abcdef1234567890abcdef\",\r\n    environment: ['sandbox']\r\n});\r\nappleReceiptVerify.validate({ receipt: appleReceipt, device: '438498A7-4850-41DB-BCBE-4E1756378E39' }, function (err, products) {\r\n    if (err) {\r\n        return console.error(err);\r\n    }\r\n    \/\/ ok!\r\n});\r\n```\r\n\r\n### Contact\r\n\r\nIf you have any questions, bugs, etc... - contact me.\r\n"
}
